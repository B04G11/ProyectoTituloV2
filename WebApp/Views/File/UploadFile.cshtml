@{
    ViewData["Title"] = "Subir Archivo";
    var categorias = ViewBag.Categorias as List<CategoryResponse>;
}

<div class="centered-wrapper">
    <form class="minimal-form big-form" onsubmit="event.preventDefault(); procesarCsv();">
        <h2 class="minimal-title">Subir Archivo</h2>

        <label>
            Categoría
            <select name="CategoriaId" id="category" asp-items="@(new SelectList(categorias, "CategoriaId", "Nombre"))"></select>
        </label>

        <label>
            Archivo CSV
            <input type="file" id="csvFile" />
        </label>


        <button type="submit">Enviar CSV</button>
    </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    async function procesarCsv() {
        const fileInput = document.getElementById('csvFile');
        const fileCategory = document.getElementById('category').value;
        const file = fileInput.files[0];

        if (!file || fileCategory.trim() === "") {
            //alert("Selecciona un archivo y su categoría.");
            //return;
            Swal.fire({
                icon: 'warning',
                title: 'Faltan datos',
                text: 'Selecciona un archivo y una categoría.'
            });
            return;
        }

        // Mostrar el SweetAlert2 de carga
        Swal.fire({
            title: 'Procesando archivo...',
            html: 'Esto puede tardar unos segundos',
            allowOutsideClick: false,
            allowEscapeKey: false,
            didOpen: () => {
                Swal.showLoading();
            }
        });

        const chunkSize = 100;
        const reader = new FileReader();

        reader.onload = async function (e) {
            const text = e.target.result;
            const lines = text.split(/\r?\n/).filter(l => l.trim() !== '');

            for (let i = 0; i < lines.length; i += chunkSize) {
                const chunk = lines.slice(i, i + chunkSize);
                console.log(chunk);

                const response = await fetch('/File/EnviarChunk', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        chunk: chunk,
                        categoryId: fileCategory
                    })
                });

                if (!response.ok) {
                    //console.error("Error al enviar chunk:", await response.text());
                    //break;
                    const errorText = await response.text();
                    Swal.fire({
                        icon: 'error',
                        title: 'Error al enviar archivo',
                        text: errorText || 'Ocurrió un error durante la carga.'
                    });
                    return;
                }
            }

            Swal.fire({
                icon: 'success',
                title: 'Completado',
                text: 'Archivo procesado exitosamente'
            });
        };

        reader.readAsText(file);
    }
</script>
